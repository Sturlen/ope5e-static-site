---
import Layout from "../../layouts/Layout.astro"
import Card from "../../components/Card.astro"
//
import Monsters from "../../api/monsters.json"

export function getStaticPaths() {
  return Monsters.map((monster) => ({ params: { slug: monster.slug } }))
}

const { slug } = Astro.params

const monster = Monsters.find((monster) => monster.slug === slug)

if (!monster) {
  throw `Monster '${slug}' not found`
}

const { challenge_rating } = monster

const desc = `${monster.size ?? ""} ${monster.type ?? "monster"}, ${
  monster.alignment ?? ""
} (CR ${challenge_rating})`
---

<Layout title={monster.name} description={desc}>
  <main>
    <h1 class="text-gradient">
      {monster.name}
    </h1>
    <em>{desc}</em>
    <hr />
    <p>
      <strong>Armor Class</strong>
      <span data-ac>{monster.armor_class}</span>
    </p>
    <p>
      <strong>Challenge</strong>
      <span data-ac>{challenge_rating}</span>
    </p>

    <ul role="list" class="link-card-grid">
      {
        monster.actions?.map((action: any) => (
          <Card title={action.name} body={action.desc} />
        ))
      }
    </ul>
    <a href={monster.document__license_url}>{monster.document__title}</a>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 80ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 0;
  }
</style>
