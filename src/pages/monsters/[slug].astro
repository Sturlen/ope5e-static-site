---
import Layout from "../../layouts/Layout.astro"

export async function getStaticPaths() {
  const modules = [...(await Astro.glob("/src/api/monsters/*.json"))] as [
    { default: any }
  ]

  return modules
    .map((m) => m.default)
    .map((monster) => ({
      params: { slug: monster.slug },
      props: { monster },
    }))
}

const { monster } = Astro.props

const { challenge_rating, actions } = monster

const desc = `${monster.size ?? ""} ${monster.type ?? "monster"}, ${
  monster.alignment ?? ""
} (CR ${challenge_rating})`
---

<Layout title={monster.name} description={desc}>
  <main>
    <h1 class="text-gradient">
      {monster.name}
    </h1>
    <em>{desc}</em>
    <hr />
    <p>
      <strong>Armor Class</strong>
      <span data-ac>{monster.armor_class}</span>
    </p>
    <p>
      <strong>Challenge</strong>
      <span data-challenge>{challenge_rating}</span>
    </p>

    <h2>Actions</h2>

    {
      actions &&
        actions.length &&
        actions.map((action: any) => (
          <p>
            <strong>{action.name}</strong>
            <span>{action.desc}</span>
          </p>
        ))
    }
    <hr />
    <a href={monster.document__license_url}>{monster.document__title}</a>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 80ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }

  h2 {
    border-bottom: 3px solid rgb(218, 98, 98);
    margin-top: 2rem;
    padding-bottom: 0.25rem;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }

  p {
    text-align: justify;
  }

  .link-card-grid {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 0;
  }
</style>
